version: 2
jobs:
  test:
    working_directory: ~/miata_bot

    docker:
      - image: "bitwalker/alpine-elixir-phoenix:latest"
        environment:
          MIX_ENV: test
          DATABASE_URL: postgres://db:db@localhost:5432/db
          APP_URL: http://localhost:4001

      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: db
          POSTGRES_PASSWORD: db
          POSTGRES_DB: db

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-mix-deps-cache-{{ checksum "mix.lock" }}
            - v1-mix-deps-cache-
      - restore_cache:
          keys:
            - v1-mix-build-cache-{{ checksum "mix.lock" }}
            - v1-mix-build-cache-

      - run:
          name: Install Dependencies
          command: |
            mix deps.get --all
            mix deps.compile
            mix local.hex --force
            mix local.rebar --force

      # - run:
      #     name: Database setup
      #     command: |
      #       mix ecto.create
      #       mix ecto.migrate

      - run:
          name: Check format
          command: mix format --check-formatted

      - run:
          name: Test
          command: mix test --no-start

      - save_cache:
          key: v1-mix-deps-cache-{{ checksum "mix.lock" }}
          paths:
            - ~/miata_bot/deps
      
      - save_cache:
          key: v1-mix-build-cache-{{ checksum "mix.lock" }}
          paths:
            - ~/miata_bot/_build

  deploy:
    working_directory: ~/miata_bot
    docker:
      - image: bitwalker/alpine-elixir-phoenix:latest
    steps:
      - checkout
      - run:
          name: Deploy to Gigalixir
          command: |
            git remote add gigalixir $GIGALIXIR_REMOTE_URL
            git push -f gigalixir HEAD:refs/heads/master
        
workflows:
  version: 2
  test_deploy:
    jobs:
      - test:
          context: org-global
      - deploy:
          context: org-global
          requires:
            - test
          filters:
            branches:
              only: master
